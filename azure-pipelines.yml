# https://github.com/NavisCarrierSolutions/Navis.SDK.Bluetracker.Reporting

---

trigger:
  branches:
    include:
      - 'develop'
      - 'feature/*'
      - 'master'
      - 'release/*'

resources:
  repositories:
    - repository: 'GitHub'
      endpoint: 'GitHub connection'
      name: 'NavisCarrierSolutions/Navis.SDK.Bluetracker.Reporting'
      type: 'github'
    - repository: 'PipelineTemplates'
      name: 'DevOps/Pipeline-Templates'
      type: 'git'

jobs:
  - job: 'Build'
    displayName: 'Build'
    strategy:
      matrix:
        Debug:
          BuildConfiguration: 'Debug'
          BuildPlatform: 'Any CPU'
        Release:
          BuildConfiguration: 'Release'
          BuildPlatform: 'Any CPU'
    pool:
      name: 'Cloud-Build'

    steps:
      - template: 'ApplyVersion/applyVersion.v1.yml@PipelineTemplates'
        parameters:
          versionFile: '\version.props'

      - task: NuGetToolInstaller@1
        displayName: 'Use NuGet 5.6.0'
        inputs:
          versionSpec: 5.6.0

      - task: NuGetCommand@2
        displayName: 'NuGet restore'
        inputs:
          feedsToUse: 'config'
          nugetConfigPath: 'NuGet.config'
          restoreSolution: 'Navis.SDK.Bluetracker.Reporting.sln'

      - task: VSBuild@1
        displayName: 'Build solution Navis.SDK.Bluetracker.Reporting.sln'
        inputs:
          solution: 'Navis.SDK.Bluetracker.Reporting.sln'
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'

      - task: PublishSymbols@2
        displayName: 'Publish symbols path'
        inputs:
          SymbolServerType: 'TeamServices'

      - task: MSBuild@1
        displayName: 'Create Nuget Packages'
        inputs:
          configuration: '$(BuildConfiguration)'
          msbuildArguments: '/t:pack /p:PackageOutputPath="$(build.artifactstagingdirectory)\packages\$(BuildConfiguration)" /p:NoPackageAnalysis=true'
          platform: '$(BuildPlatform)'
          solution: 'Navis.SDK.Bluetracker.Reporting.sln'

      - task: PublishBuildArtifacts@1
        condition: 'succeededOrFailed()'
        displayName: 'Publish Artifact'
        inputs:
          ArtifactName: 'drop'
          PathtoPublish: '$(build.artifactstagingdirectory)'
...
